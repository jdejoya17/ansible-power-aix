---
#######################################
# Setup Tasks
#######################################
- name: "SETUP: Gather LVM facts"
  lvm_facts:
    name: all
    component: all
  register: facts
- debug: var=facts

- name: "SETUP: create a volume group"
  lvg:
    state: present
    vg_name: "{{ vg_name }}"
    pvs: "{{ pv_list }}"
    force: true
  when:
  - facts.ansible_facts.LVM.VGs.{{ vg_name }} is not defined

- name: "SETUP: create a logical volume"
  lvol:
    state: present
    vg: "{{ vg_name }}"
    lv: "{{ lv_name }}"
    size: "{{ lv_size }}"
    lv_type: "{{ lv_type }}"
  register: results
  when:
  - facts.ansible_facts.LVM.LVs.{{ lv_name }} is not defined

- name: "SETUP: create filesystem"
  filesystem:
    state: present
    filesystem: "{{ fs_mnt }}"
    fs_type: "{{ fs_type }}"
    device: "{{ lv_name }}"
    mount_group: "{{ mnt_grp }}"
  register: results
  when:
  - results is changed or facts.ansible_facts.LVM.LVs.{{ lv_name }}.mount_point != "{{ fs_mnt }}"

- name: "SETUP: Check for first run"
  shell: ls /tmp/tc02_s01_unmount || echo "mount NFS"
  register: nextrun

- name: "SETUP: mount filesystem"
  mount:
    state: mount
    mount_dir: "{{ fs_mnt }}"
  when: nextrun.stdout.find( "mount NFS" ) != -1

#######################################
# Actual Task To Be Tested
#######################################
- name: "TC02_S01: umount filesystem"
  mount:
    state: umount
    mount_dir: "{{ fs_mnt }}"
  register: results
- debug: var=results

- name: "TC02_S01_ASSERT1: expected results - first run"
  assert:
    that:
    - results.msg.find( "Unmount successful" ) != -1
    - results.cmd.find( "{{ fs_mnt }}" ) != -1
  when:
  - results is changed

- name: "SETUP: make sure to not mount NFS again on second run"
  shell: touch /tmp/tc02_s01_unmount
  when:
  - results is changed

- name: "TC02_S01_ASSERT2: expected results -second run"
  assert:
    that:
    - results.msg.find( "not mounted" ) != -1
    - results.msg.find( "{{ fs_mnt }}" ) != -1
  when:
  - results is not changed

- name: "SETUP: make sure to reset env variables"
  shell: rm /tmp/tc02_s01_unmount || echo "nothing to reset"
  when:
  - results is not changed

#######################################
# Teardown Task
#######################################
# - name: "TEARDOWN: unmount filesystem"
#   mount:
#     state: umount
#     mount_dir: "{{ fs_mnt }}"
#   when: results is not changed
