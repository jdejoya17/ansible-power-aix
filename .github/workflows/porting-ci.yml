---
name: run ibm.power_aix collection porting guide

# run sanity test during pull request to dev-collection
on:
  pull_request:
    branches: [ dev-collection ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  ########################################################################
  # compile test
  # - makes sure that the collection has compatible syntax
  # with python version 2.7, 3.6, 3.7, and 3.8
  ########################################################################
  # compile-test:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ansible_collections/ibm/power_aix
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ['2.7', '3.6', '3.7', '3.8']

  #   name: running compile tests with python ${{ matrix.python-version }}
  #   steps:
  #   - name: checkout repository
  #     uses: actions/checkout@v2
  #     with:
  #       path: ansible_collections/ibm/power_aix
      
  #   - name: setup python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ matrix.python-version }}
        
  #   - name: install ansible base (devel branch)
  #     run: |
  #       make install-ansible-devel-branch
        
  #   - name: run compile test on python ${{ matrix.python-version }}
  #     run: |
  #       make compile PYTHON_VERSION=${{ matrix.python-version }}

  ########################################################################
  # porting test
  # - makes sure that the collection is properly ported for python3
  ########################################################################
  porting-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ansible_collections/ibm/power_aix
    strategy:
      matrix:
        ansible-version: ['2.9']
        python-version: ['3.7']

    name: running python3 porting test
    steps:
    - name: checkout repository
      uses: actions/checkout@v2
      with:
        path: ansible_collections/ibm/power_aix
      
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: install linting test requirements
      run: |
        python -m pip install --upgrade pip
        python -m pip install pylint==2.10.*

    - name: run python3 porting linter
      run: |
        make porting 

  ########################################################################
  # porting test - with futurize
  # - makes sure that the collection is properly ported for python3
  ########################################################################
  porting-futurized-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ansible_collections/ibm/power_aix
    strategy:
      matrix:
        ansible-version: ['2.9']
        python-version: ['3.7']

    name: running python3 porting test on futurized modules
    steps:
    - name: checkout repository
      uses: actions/checkout@v2
      with:
        path: ansible_collections/ibm/power_aix
      
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: install linting test requirements
      run: |
        python -m pip install --upgrade pip
        python -m pip install pylint==2.10.*

    - name: install futurize requirements
      run: |
        python -m pip install future

    - name: run futurize
      run: futurize --write --both-stages --print-function  plugins/modules/ 
      with:
        path: ansible_collections/ibm/power_aix

    - name: run python3 porting linter on futurized modules
      run: |
        make porting 

  #
  ########################################################################
  # futurize considerations
  # - show changes to be made to make python 2 to 3 compatible
  ########################################################################
  futurize-considerations:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ansible_collections/ibm/power_aix
    strategy:
      matrix:
        ansible-version: ['2.9']
        python-version: ['3.7']

    name: running python3 futurize suggestions
    steps:
    - name: checkout repository
      uses: actions/checkout@v2
      with:
        path: ansible_collections/ibm/power_aix
      
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: install futurize requiments
      run: |
        python -m pip install --upgrade pip
        python -m pip install future

    - name: run futirize
      run: futurize --both-stages --print-function  plugins/modules/ 

  ########################################################################
  # module linting test
  # - makes sure that the collection conforms with PEP8 coding style
  # standards
  ########################################################################
  # module-linting-test:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ansible_collections/ibm/power_aix
  #   strategy:
  #     matrix:
  #       ansible-version: ['2.9']
  #       python-version: ['3.7']

  #   name: running module linting test
  #   steps:
  #   - name: checkout repository
  #     uses: actions/checkout@v2
  #     with:
  #       path: ansible_collections/ibm/power_aix
      
  #   - name: setup python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ matrix.python-version }}
        
  #   - name: install linting test requirements
  #     run: |
  #       python -m pip install --upgrade pip
  #       python -m pip install flake8
  #       python -m pip install pycodestyle

  #   - name: run pep8 coding style linter
  #     run: |
  #       make module-lint

  ########################################################################
  # sanity test
  # - makes sure that the collection passes the ansible sanity tests
  ########################################################################
  # sanity-test:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ansible_collections/ibm/power_aix
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       ansible-version: ['2.9', '3', '4', 'devel']
  #       python-version: ['3.8']

  #   name: running sanity tests with ansible ${{ matrix.ansible-version }} and python ${{ matrix.python-version }}
  #   steps:
  #   - name: checkout repository
  #     uses: actions/checkout@v2
  #     with:
  #       path: ansible_collections/ibm/power_aix
      
  #   - name: setup python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ matrix.python-version }}
        
  #   - name: install ansible ${{ matrix.ansible-version }}
  #     if: ${{ matrix.ansible-version != 'devel' }}
  #     run: |
  #       make install-ansible ANSIBLE_VERSION=${{ matrix.ansible-version }}

  #   - name: install ansible ${{ matrix.ansible-version }}
  #     if: ${{ matrix.ansible-version == 'devel' }}
  #     run: |
  #       make install-ansible-devel-branch

  #   - name: install sanity test requirements
  #     run: |
  #       make install-sanity-test-requirements

  #   - name: run sanity test on ansible ${{ matrix.ansible-version }} and python ${{ matrix.python-version }}
  #     run: |
  #       make sanity-test PYTHON_VERSION=${{ matrix.python-version }}
  
  ########################################################################
  # unit tests
  ########################################################################
  unit-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ansible_collections/ibm/power_aix
    strategy:
      matrix:
        python-version: ['3.7']
        
    name: running unit tests with python ${{ matrix.python-version }}
    steps:
    - name: checkout repository
      uses: actions/checkout@v2
      with:
        path: ansible_collections/ibm/power_aix
      
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
  
    - name: install ansible base (devel branch)
      run: |
        make install-ansible-devel-branch
        
    - name: install python modules needed for unit testing
      run: |
        make install-unit-test-requirements

    - name: install futurize requirements
      run: |
        python -m pip install future

    - name: run futurize
      run: futurize --write --both-stages --print-function  plugins/modules/ 

    - name: run unit tests
      run: |
        make unit-test PYTHON_VERSION=${{ matrix.python-version }}
